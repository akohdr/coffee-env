# Functions for manipulating module loading cache

cachedModNames = () -> (k for k of require.cache)

matchModNames = (name) -> cachedModNames().filter((o) -> o.search(name) > 0)

purgeMod = (name) ->
    ds = matchModNames(name)
    delete(require.cache[s]) for s in ds
    ds

reinjectMod = (name) ->
    purgeMod(name)
    require(name)

# constructs a module loader function taking name from msg.body.js
loader = (msg) ->
    try
        mb = msg.body
        loader = () -> reinjectMod(mb.js)
        mb.success? loader
        loader  # could also think about wrappers decorators
    catch e
        mb.fail? e

# Declared exports
e = exports
e.cachedModNames = cachedModNames
e.matchModNames = matchModNames
e.purgeMod = purgeMod
e.reinjectMod = reinjectMod
e.loader = loader

